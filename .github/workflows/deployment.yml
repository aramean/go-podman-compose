name: go-continuous-deployment

on:
  workflow_run:
    workflows: ['go-continuous-integration-and-delivery']
    types:
      - completed
      
jobs:
  
  download:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: Download
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: releasement.yml
          workflow_conclusion: success
          name: artifact-podman-compose
          path: src/bin
      - run: ls src/bin

      - name: Cache Go binaries
        uses: actions/cache@v2
        id: restore-build
        with:
            path: src/bin
            key: podman-compose-cache-key

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [download]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore cached Go binaries
        uses: actions/cache@v2
        id: restore-build
        with:
          path: src/bin
          key: podman-compose-cache-key
      - run: ls src/bin
      
      - name: Zip Go binaries
        run: |
          zip --junk-paths my-artifact podman-compose README.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
  
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./my-artifact.zip
          asset_name: my-artifact.zip
          asset_content_type: application/zip
          
      #- name: Publish Release
      #  id: publish
      #  uses: packagrio/action-publishr-go@master
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
      #  with:
      #    upload_assets: 'podman-compose'
    
